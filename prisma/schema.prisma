generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model channel_messages {
  id         BigInt                @id @default(autoincrement())
  guild_id   String                @db.VarChar(20)
  channel_id String                @db.VarChar(20)
  message_id String                @db.VarChar(20)
  user_id    String                @db.VarChar(20)
  username   String                @db.VarChar(255)
  created_at DateTime              @db.Timestamptz(6)
  urls       channel_message_urls[]

  @@index([guild_id], map: "channel_messages_guild_id_index")
}

model channel_message_urls {
  id         BigInt           @id @default(autoincrement())
  url        String          @db.VarChar(255)
  message_id BigInt
  message    channel_messages @relation(fields: [message_id], references: [id], onDelete: NoAction, map: "channel_message_urls_message_id_foreign")

  @@index([url], map: "channel_message_urls_url_index")
  @@index([message_id], map: "channel_message_urls_message_id_index")
  @@index([url, message_id], map: "channel_message_urls_url_message_id_index")
}

model presence_logs {
  id            BigInt   @id @default(autoincrement())
  guild_id      String   @db.VarChar(20)
  user_id       String   @db.VarChar(20)
  username      String?  @db.VarChar(255)
  old_status    String?  @db.VarChar(20)
  new_status    String?  @db.VarChar(20)
  old_activity  String?
  new_activity  String?
  client_status String?  @db.VarChar(200)
  created_at    DateTime @default(now())

  @@index([guild_id, created_at], map: "presence_logs_guild_date_index")
}

model voice_state_logs {
  id                BigInt   @id @default(autoincrement())
  user_id           String   @db.VarChar(20)
  from_guild_id     String   @db.VarChar(20)
  from_guild_name   String   @db.VarChar(200)
  to_guild_id       String   @db.VarChar(20)
  to_guild_name     String   @db.VarChar(200)
  from_channel_id   String   @db.VarChar(20)
  from_channel_name String   @db.VarChar(100)
  to_channel_id     String   @db.VarChar(20)
  to_channel_name   String   @db.VarChar(100)
  username          String?  @db.VarChar(255)
  event_type        String?  @db.VarChar(20)
  created_at        DateTime @default(now())

  @@index([user_id, created_at], map: "voice_state_logs_user_date_index")
}